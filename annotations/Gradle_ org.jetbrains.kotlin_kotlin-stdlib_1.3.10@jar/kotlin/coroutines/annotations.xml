<root>
    <item name='kotlin.coroutines.CoroutineContext.Element.DefaultImpls kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext.Element, kotlin.coroutines.CoroutineContext.Key&lt;?&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.coroutines.CoroutineContext R fold(R, kotlin.jvm.functions.Function2&lt;? super R,? super kotlin.coroutines.CoroutineContext.Element,? extends R&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.coroutines.CoroutineContext.Element kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext.Key&lt;?&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.coroutines.CombinedContext kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext.Key&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.coroutines.ContinuationInterceptor.DefaultImpls kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.ContinuationInterceptor, kotlin.coroutines.CoroutineContext) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.coroutines.ContinuationInterceptor kotlin.coroutines.Continuation&lt;T&gt; interceptContinuation(kotlin.coroutines.Continuation&lt;? super T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.coroutines.ContinuationKt void startCoroutine(kotlin.jvm.functions.Function1&lt;? super kotlin.coroutines.Continuation&lt;? super T&gt;,? extends java.lang.Object&gt;, kotlin.coroutines.Continuation&lt;? super T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.coroutines.CoroutineContext.Element R fold(R, kotlin.jvm.functions.Function2&lt;? super R,? super kotlin.coroutines.CoroutineContext.Element,? extends R&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.coroutines.SafeContinuation SafeContinuation(kotlin.coroutines.Continuation&lt;? super T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.coroutines.SafeContinuation java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.coroutines.AbstractCoroutineContextElement kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext.Key&lt;?&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.coroutines.CoroutineContext kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext.Key&lt;?&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.coroutines.EmptyCoroutineContext kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.coroutines.AbstractCoroutineContextElement R fold(R, kotlin.jvm.functions.Function2&lt;? super R,? super kotlin.coroutines.CoroutineContext.Element,? extends R&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.coroutines.AbstractCoroutineContextElement E get(kotlin.coroutines.CoroutineContext.Key&lt;E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.coroutines.ContinuationInterceptor E get(kotlin.coroutines.CoroutineContext.Key&lt;E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.coroutines.CoroutineContext E get(kotlin.coroutines.CoroutineContext.Key&lt;E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.coroutines.SafeContinuation SafeContinuation(kotlin.coroutines.Continuation&lt;? super T&gt;, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.coroutines.ContinuationKt kotlin.coroutines.Continuation&lt;kotlin.Unit&gt; createCoroutine(kotlin.jvm.functions.Function2&lt;? super R,? super kotlin.coroutines.Continuation&lt;? super T&gt;,? extends java.lang.Object&gt;, R, kotlin.coroutines.Continuation&lt;? super T&gt;) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.coroutines.CoroutineContext.Element.DefaultImpls kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext.Element, kotlin.coroutines.CoroutineContext) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.coroutines.CoroutineContext kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.coroutines.ContinuationInterceptor Key'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.coroutines.ContinuationKt kotlin.coroutines.Continuation&lt;kotlin.Unit&gt; createCoroutine(kotlin.jvm.functions.Function1&lt;? super kotlin.coroutines.Continuation&lt;? super T&gt;,? extends java.lang.Object&gt;, kotlin.coroutines.Continuation&lt;? super T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.coroutines.CombinedContext CombinedContext(kotlin.coroutines.CoroutineContext, kotlin.coroutines.CoroutineContext.Element) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.coroutines.AbstractCoroutineContextElement kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.coroutines.CombinedContext java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.coroutines.CoroutineContext.Element kotlin.coroutines.CoroutineContext.Key&lt;?&gt; getKey()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.coroutines.ContinuationInterceptor.DefaultImpls kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.ContinuationInterceptor, kotlin.coroutines.CoroutineContext.Key&lt;?&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.coroutines.AbstractCoroutineContextElement AbstractCoroutineContextElement(kotlin.coroutines.CoroutineContext.Key&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.coroutines.AbstractCoroutineContextElement kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.coroutines.ContinuationInterceptor.DefaultImpls kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.ContinuationInterceptor, kotlin.coroutines.CoroutineContext.Key&lt;?&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.coroutines.ContinuationKt.Continuation.1 void resumeWith(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.coroutines.ContinuationKt kotlin.coroutines.Continuation&lt;kotlin.Unit&gt; createCoroutine(kotlin.jvm.functions.Function1&lt;? super kotlin.coroutines.Continuation&lt;? super T&gt;,? extends java.lang.Object&gt;, kotlin.coroutines.Continuation&lt;? super T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.coroutines.ContinuationKt kotlin.coroutines.Continuation&lt;kotlin.Unit&gt; createCoroutine(kotlin.jvm.functions.Function2&lt;? super R,? super kotlin.coroutines.Continuation&lt;? super T&gt;,? extends java.lang.Object&gt;, R, kotlin.coroutines.Continuation&lt;? super T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.coroutines.CoroutineContext.DefaultImpls kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext, kotlin.coroutines.CoroutineContext) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.coroutines.ContinuationKt void startCoroutine(kotlin.jvm.functions.Function2&lt;? super R,? super kotlin.coroutines.Continuation&lt;? super T&gt;,? extends java.lang.Object&gt;, R, kotlin.coroutines.Continuation&lt;? super T&gt;) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.coroutines.EmptyCoroutineContext E get(kotlin.coroutines.CoroutineContext.Key&lt;E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.coroutines.SafeContinuation kotlin.coroutines.CoroutineContext getContext()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.coroutines.Continuation void resumeWith(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.coroutines.CoroutineContext.DefaultImpls kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext, kotlin.coroutines.CoroutineContext)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.coroutines.EmptyCoroutineContext java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.coroutines.ContinuationInterceptor.DefaultImpls void releaseInterceptedContinuation(kotlin.coroutines.ContinuationInterceptor, kotlin.coroutines.Continuation&lt;?&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.coroutines.EmptyCoroutineContext kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.coroutines.CombinedContext kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext.Key&lt;?&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.coroutines.AbstractCoroutineContextElement kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext.Key&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.coroutines.CombinedContext R fold(R, kotlin.jvm.functions.Function2&lt;? super R,? super kotlin.coroutines.CoroutineContext.Element,? extends R&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.coroutines.ContinuationInterceptor kotlin.coroutines.Continuation&lt;T&gt; interceptContinuation(kotlin.coroutines.Continuation&lt;? super T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.coroutines.CoroutineContext kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext.Key&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.coroutines.CoroutineContext.Element.DefaultImpls kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext.Element, kotlin.coroutines.CoroutineContext.Key&lt;?&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.coroutines.CoroutineContext.Element kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext.Key&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.coroutines.CoroutineContext.Element.DefaultImpls E get(kotlin.coroutines.CoroutineContext.Element, kotlin.coroutines.CoroutineContext.Key&lt;E&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.coroutines.ContinuationKt.Continuation.1 kotlin.coroutines.CoroutineContext getContext()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.coroutines.ContinuationKt kotlin.coroutines.Continuation&lt;kotlin.Unit&gt; createCoroutine(kotlin.jvm.functions.Function2&lt;? super R,? super kotlin.coroutines.Continuation&lt;? super T&gt;,? extends java.lang.Object&gt;, R, kotlin.coroutines.Continuation&lt;? super T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.coroutines.EmptyCoroutineContext kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext.Key&lt;?&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.coroutines.ContinuationKt kotlin.coroutines.Continuation&lt;kotlin.Unit&gt; createCoroutine(kotlin.jvm.functions.Function1&lt;? super kotlin.coroutines.Continuation&lt;? super T&gt;,? extends java.lang.Object&gt;, kotlin.coroutines.Continuation&lt;? super T&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.coroutines.CombinedContext E get(kotlin.coroutines.CoroutineContext.Key&lt;E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.coroutines.AbstractCoroutineContextElement kotlin.coroutines.CoroutineContext.Key&lt;?&gt; getKey()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.coroutines.EmptyCoroutineContext R fold(R, kotlin.jvm.functions.Function2&lt;? super R,? super kotlin.coroutines.CoroutineContext.Element,? extends R&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.coroutines.CoroutineContext kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.coroutines.CoroutineContext.Element.DefaultImpls kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext.Element, kotlin.coroutines.CoroutineContext)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.coroutines.SafeContinuation void resumeWith(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.coroutines.ContinuationInterceptor.DefaultImpls R fold(kotlin.coroutines.ContinuationInterceptor, R, kotlin.jvm.functions.Function2&lt;? super R,? super kotlin.coroutines.CoroutineContext.Element,? extends R&gt;) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.coroutines.ContinuationInterceptor kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext.Key&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.coroutines.ContinuationInterceptor void releaseInterceptedContinuation(kotlin.coroutines.Continuation&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.coroutines.EmptyCoroutineContext kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext.Key&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.coroutines.ContinuationKt void startCoroutine(kotlin.jvm.functions.Function1&lt;? super kotlin.coroutines.Continuation&lt;? super T&gt;,? extends java.lang.Object&gt;, kotlin.coroutines.Continuation&lt;? super T&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.coroutines.CombinedContext kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.coroutines.CoroutineContext.Element.DefaultImpls kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext.Element, kotlin.coroutines.CoroutineContext.Key&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.coroutines.ContinuationInterceptor.DefaultImpls E get(kotlin.coroutines.ContinuationInterceptor, kotlin.coroutines.CoroutineContext.Key&lt;E&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.coroutines.CombinedContext kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.coroutines.ContinuationInterceptor kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext.Key&lt;?&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.coroutines.CoroutineContext.Element.DefaultImpls R fold(kotlin.coroutines.CoroutineContext.Element, R, kotlin.jvm.functions.Function2&lt;? super R,? super kotlin.coroutines.CoroutineContext.Element,? extends R&gt;) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.coroutines.CoroutineContext.Element.DefaultImpls E get(kotlin.coroutines.CoroutineContext.Element, kotlin.coroutines.CoroutineContext.Key&lt;E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.coroutines.ContinuationKt void startCoroutine(kotlin.jvm.functions.Function2&lt;? super R,? super kotlin.coroutines.Continuation&lt;? super T&gt;,? extends java.lang.Object&gt;, R, kotlin.coroutines.Continuation&lt;? super T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.coroutines.CoroutineContext.Element E get(kotlin.coroutines.CoroutineContext.Key&lt;E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.coroutines.EmptyCoroutineContext INSTANCE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.coroutines.ContinuationInterceptor.DefaultImpls kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.ContinuationInterceptor, kotlin.coroutines.CoroutineContext)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.coroutines.CombinedContext CombinedContext(kotlin.coroutines.CoroutineContext, kotlin.coroutines.CoroutineContext.Element) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
</root>
